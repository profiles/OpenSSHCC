/* This file is from "the internet", well I've combined 3 different versions over time.
 * Many things have been commented out since they're not needed for this project
 * and might need a bunch of other header files.
 * Things not included with the project should be available be default in Theos (namely ControlCenterUIKit).
 * Blanxd.H
 */

/*
* This header is generated by classdump-dyld 1.0
* on Thursday, January 25, 2018 at 11:27:41 PM Eastern European Standard Time
* Operating System: Version 11.1.2 (Build 15B202)
* Image Source: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
* classdump-dyld is licensed under GPLv3, Copyright © 2013-2016 by Elias Limneos.
*/

/*
* This header is generated by classdump-dyld 1.0
* on Friday, February 8, 2019 at 1:25:48 PM Eastern European Standard Time
* Operating System: Version 12.1 (Build 16B92)
* Image Source: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
* classdump-dyld is licensed under GPLv3, Copyright © 2013-2016 by Elias Limneos.
*/

/*
* This header is generated by classdump-dyld 1.0
* on Sunday, November 10, 2019 at 11:16:35 PM Eastern European Standard Time
* Operating System: Version 13.1.3 (Build 17A878)
* Image Source: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
* classdump-dyld is licensed under GPLv3, Copyright © 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIViewController.h> // 11 // ?? 12,13 ??
//#import <UIKitCore/UIViewController.h> // 12,13
//#import <libobjc.A.dylib/CCUIContentModuleContentViewController.h>
#import <ControlCenterUIKit/CCUIContentModuleContentViewController-Protocol.h>

//@class UIViewPropertyAnimator, // 13
@class CCUIButtonModuleView, UIImage, UIColor; //, CCUICAPackageDescription, NSString;

@interface CCUIButtonModuleViewController : UIViewController <CCUIContentModuleContentViewController> //{
//	CCUIButtonModuleView* _buttonModuleView;
//	BOOL _expanded;
//}
@property (nonatomic,retain) UIImage * glyphImage; 
@property (nonatomic,retain) UIColor * glyphColor; 
@property (nonatomic,retain) UIImage * selectedGlyphImage; 
@property (nonatomic,retain) UIColor * selectedGlyphColor; 
//@property (nonatomic,retain) CCUICAPackageDescription * glyphPackageDescription; 
@property (nonatomic,copy) NSString * glyphState; 
@property (assign,nonatomic) double glyphScale; // 13
@property (assign,getter=isSelected,nonatomic) BOOL selected; 
//@property (getter=isExpanded,nonatomic,readonly) BOOL expanded; // 11,12                              //@synthesize expanded=_expanded - In the implementation block
@property (assign,getter=isExpanded,nonatomic) BOOL expanded;                                 //@synthesize expanded=_expanded - In the implementation block
@property (nonatomic,readonly) CCUIButtonModuleView * buttonView; 
@property (nonatomic,readonly) BOOL hasGlyph; // 13
//@property (readonly) unsigned long long hash; 
//@property (readonly) Class superclass; 
//@property (copy,readonly) NSString * description; 
//@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) double preferredExpandedContentHeight; 
@property (nonatomic,readonly) double preferredExpandedContentWidth; 
@property (nonatomic,readonly) double preferredExpandedContinuousCornerRadius; // 13
@property (nonatomic,readonly) BOOL providesOwnPlatter; 
@property (nonatomic,readonly) UIViewPropertyAnimator * customAnimator; // 13
-(BOOL)isSelected;
-(void)viewDidLoad;
-(void)viewWillLayoutSubviews; // 13
-(void)setSelected:(BOOL)arg1 ;
-(BOOL)isExpanded;
-(void)setExpanded:(BOOL)arg1 ; // 13
-(UIColor *)selectedGlyphColor;
-(void)setSelectedGlyphColor:(UIColor *)arg1 ;
-(void)setGlyphColor:(UIColor *)arg1 ;
-(UIColor *)glyphColor;
-(UIImage *)glyphImage;
-(void)setGlyphImage:(UIImage *)arg1 ;
-(void)setSelectedGlyphImage:(UIImage *)arg1 ;
-(UIImage *)selectedGlyphImage;
-(CCUIButtonModuleView *)buttonView;
//-(void)setGlyphPackageDescription:(CCUICAPackageDescription *)arg1 ;
-(void)setGlyphState:(NSString *)arg1 ;
//-(CCUICAPackageDescription *)glyphPackageDescription;
-(NSString *)glyphState;
-(void)setGlyphScale:(double)arg1 ; // 13
-(double)glyphScale; // 13
-(void)buttonTouchDown:(id)arg1 forEvent:(id)arg2 ; // 13
-(void)buttonTapped:(id)arg1 forEvent:(id)arg2 ;
-(void)_buttonTouchDown:(id)arg1 forEvent:(id)arg2 ; // 13
-(void)_buttonTapped:(id)arg1 forEvent:(id)arg2 ; // 12,13
-(double)preferredExpandedContentHeight;
-(void)willTransitionToExpandedContentMode:(BOOL)arg1 ;
-(void)didTransitionToExpandedContentMode:(BOOL)arg1 ;
-(BOOL)hasGlyph; // 13
@end
